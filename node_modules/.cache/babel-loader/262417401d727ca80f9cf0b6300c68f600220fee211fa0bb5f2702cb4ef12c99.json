{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\2023\\\\tasks-firebase\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport { useFetch } from \"./Hooks/fetch-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const config = {\n    URL: 'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json'\n  };\n  const {\n    isLoading,\n    error,\n    sendRequests: fetchTasks\n  } = useFetch();\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n  //\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n  //\n  //     const data = await response.json();\n  //\n  //\n  //     const loadedTasks = [];\n  //\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n  //\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  useEffect(() => {\n    const transformReceivedDataFromHook = taskObj => {\n      const loadedTasks = [];\n      for (const taskKey in taskObj) {\n        loadedTasks.push({\n          id: taskKey,\n          text: taskObj[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    };\n    fetchTasks(transformReceivedDataFromHook, config);\n  }, [fetchTasks]);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jCI0WAyXsUykatOGid69b9tgg9Q=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Tasks","NewTask","useFetch","App","tasks","setTasks","config","URL","isLoading","error","sendRequests","fetchTasks","transformReceivedDataFromHook","taskObj","loadedTasks","taskKey","push","id","text","taskAddHandler","task","prevTasks","concat"],"sources":["C:/Web/2023/tasks-firebase/src/App.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport {useFetch} from \"./Hooks/fetch-hook\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n\n\n  const config = {\n    URL:'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json'\n  }\n\n  const {isLoading, error, sendRequests:fetchTasks} = useFetch()\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json'\n  //     );\n  //\n  //     if (!response.ok) {\n  //       throw new Error('Request failed!');\n  //     }\n  //\n  //     const data = await response.json();\n  //\n  //\n  //     const loadedTasks = [];\n  //\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n  //\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || 'Something went wrong!');\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  \n  useEffect(() => {\n    const transformReceivedDataFromHook = (taskObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n      }\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(transformReceivedDataFromHook,config);\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAE7D,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAAQC,QAAQ,QAAO,oBAAoB;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAItC,MAAMO,MAAM,GAAG;IACbC,GAAG,EAAC;EACN,CAAC;EAED,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC,YAAY,EAACC;EAAU,CAAC,GAAGT,QAAQ,EAAE;;EAE9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAJ,SAAS,CAAC,MAAM;IACd,MAAMc,6BAA6B,GAAIC,OAAO,IAAK;MACjD,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIF,OAAO,EAAE;QAC7BC,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEL,OAAO,CAACE,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAChE;MACAb,QAAQ,CAACS,WAAW,CAAC;IACvB,CAAC;IAEDH,UAAU,CAACC,6BAA6B,EAACN,MAAM,CAAC;EAClD,CAAC,EAAE,CAACK,UAAU,CAAC,CAAC;EAEhB,MAAMQ,cAAc,GAAIC,IAAI,IAAK;IAC/Bf,QAAQ,CAAEgB,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,OAAO;MAAC,SAAS,EAAED;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACtC,QAAC,KAAK;MACJ,KAAK,EAAEf,KAAM;MACb,OAAO,EAAEI,SAAU;MACnB,KAAK,EAAEC,KAAM;MACb,OAAO,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GApEQR,GAAG;EAAA,QAS0CD,QAAQ;AAAA;AAAA,KATrDC,GAAG;AAsEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}