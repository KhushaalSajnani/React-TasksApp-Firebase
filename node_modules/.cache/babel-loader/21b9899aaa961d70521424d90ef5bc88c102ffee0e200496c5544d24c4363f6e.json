{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nexport const useFetch = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequests = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.URL, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, [requestConfig, applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequests\n  };\n};\n_s(useFetch, \"7YeY5ROoMygY7pP+Aj45hWEL9fQ=\");","map":{"version":3,"names":["useCallback","useState","useFetch","applyData","isLoading","setIsLoading","error","setError","sendRequests","requestConfig","response","fetch","URL","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Web/2023/tasks-firebase/src/Hooks/fetch-hook.js"],"sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useFetch = (applyData) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequests = useCallback(async (requestConfig) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch( requestConfig.URL , {\r\n                method: requestConfig.method ? requestConfig.method : 'GET',\r\n                headers: requestConfig.headers ? requestConfig.headers : {},\r\n                body: requestConfig.body ? JSON.stringify(requestConfig.body): null\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n\r\n            applyData(data)\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    },[requestConfig,applyData]);\r\n\r\n\r\n    return{\r\n       isLoading,error,sendRequests\r\n    }\r\n}"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAA;EAEnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,YAAY,GAAGR,WAAW,CAAC,MAAOS,aAAa,IAAK;IACtDJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAEF,aAAa,CAACG,GAAG,EAAG;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEN,aAAa,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,aAAa,CAACM,IAAI,CAAC,GAAE;MACnE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAGlClB,SAAS,CAACiB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAC,CAACI,aAAa,EAACN,SAAS,CAAC,CAAC;EAG5B,OAAM;IACHC,SAAS;IAACE,KAAK;IAACE;EACnB,CAAC;AACL,CAAC;AAAA,GAjCYN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}