{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\2023\\\\tasks-firebase\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { useFetch } from \"../../Hooks/fetch-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequests\n  } = useFetch();\n  const createTask = (taskTextReceivedFromComponent, taskDataAfterReceivingData) => {\n    const generatedId = taskDataAfterReceivingData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskTextReceivedFromComponent\n    };\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = async taskText => {\n    // console.log(taskText)\n\n    const myConfig = {\n      URL: 'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: taskText\n    };\n    sendRequests(myConfig, createTask.bind(null, taskText));\n\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n    //\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n    //\n    //   const data = await response.json();\n    //   console.log(data)\n    //\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n    //\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"X1c9HJMHrx6vyxMOs5wvMEQcTmo=\", false, function () {\n  return [useFetch];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useFetch","NewTask","props","isLoading","error","sendRequests","createTask","taskTextReceivedFromComponent","taskDataAfterReceivingData","generatedId","name","createdTask","id","text","onAddTask","enterTaskHandler","taskText","myConfig","URL","method","headers","body","bind"],"sources":["C:/Web/2023/tasks-firebase/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport {useFetch} from \"../../Hooks/fetch-hook\";\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequests} = useFetch();\n\n  const createTask = (taskTextReceivedFromComponent, taskDataAfterReceivingData) => {\n    const generatedId = taskDataAfterReceivingData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskTextReceivedFromComponent };\n\n    props.onAddTask(createdTask);\n\n  }\n  const enterTaskHandler = async (taskText) => {\n    // console.log(taskText)\n\n    const myConfig = {\n      URL: 'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: taskText\n    };\n\n\n    sendRequests(myConfig, createTask.bind(null, taskText));\n\n    // setIsLoading(true);\n    // setError(null);\n    // try {\n    //   const response = await fetch(\n    //     'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n    //     {\n    //       method: 'POST',\n    //       body: JSON.stringify({ text: taskText }),\n    //       headers: {\n    //         'Content-Type': 'application/json',\n    //       },\n    //     }\n    //   );\n    //\n    //   if (!response.ok) {\n    //     throw new Error('Request failed!');\n    //   }\n    //\n    //   const data = await response.json();\n    //   console.log(data)\n    //\n    //   const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    //   const createdTask = { id: generatedId, text: taskText };\n    //\n    //   props.onAddTask(createdTask);\n    // } catch (err) {\n    //   setError(err.message || 'Something went wrong!');\n    // }\n    // setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,QAAQ,QAAO,wBAAwB;AAAC;AAEhD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGL,QAAQ,EAAE;EAEnD,MAAMM,UAAU,GAAG,CAACC,6BAA6B,EAAEC,0BAA0B,KAAK;IAChF,MAAMC,WAAW,GAAGD,0BAA0B,CAACE,IAAI,CAAC,CAAC;IACrD,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAW;MAAEI,IAAI,EAAEN;IAA8B,CAAC;IAE5EL,KAAK,CAACY,SAAS,CAACH,WAAW,CAAC;EAE9B,CAAC;EACD,MAAMI,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C;;IAEA,MAAMC,QAAQ,GAAG;MACfC,GAAG,EAAE,4EAA4E;MACjFC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEL;IACR,CAAC;IAGDX,YAAY,CAACY,QAAQ,EAAEX,UAAU,CAACgB,IAAI,CAAC,IAAI,EAAEN,QAAQ,CAAC,CAAC;;IAEvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAED,gBAAiB;MAAC,OAAO,EAAEZ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GA9DIH,OAAO;EAAA,QAC8BD,QAAQ;AAAA;AAAA,KAD7CC,OAAO;AAgEb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}