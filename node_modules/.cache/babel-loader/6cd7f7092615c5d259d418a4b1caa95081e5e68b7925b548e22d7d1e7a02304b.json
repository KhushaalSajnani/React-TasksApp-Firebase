{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\2023\\\\tasks-firebase\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { useFetch } from \"../../Hooks/fetch-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useFetch();\n  const enterTaskHandler = async taskText => {\n    const myConfig = {\n      URL: 'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: taskText\n    };\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      console.log(data);\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"zBY24iP7Wv8mbOisVaPCPEAvFZA=\", false, function () {\n  return [useFetch];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useFetch","NewTask","props","isLoading","error","sendRequest","enterTaskHandler","taskText","myConfig","URL","headers","body","setIsLoading","setError","response","fetch","method","JSON","stringify","text","ok","Error","data","json","console","log","generatedId","name","createdTask","id","onAddTask","err","message"],"sources":["C:/Web/2023/tasks-firebase/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport {useFetch} from \"../../Hooks/fetch-hook\";\n\nconst NewTask = (props) => {\n  const {isLoading, error, sendRequest} = useFetch();\n\n  const enterTaskHandler = async (taskText) => {\n\n\n    const myConfig = {\n      URL: 'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: taskText\n    };\n\n\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-realtime-db-json-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      console.log(data)\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,QAAQ,QAAO,wBAAwB;AAAC;AAEhD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGL,QAAQ,EAAE;EAElD,MAAMM,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAG3C,MAAMC,QAAQ,GAAG;MACfC,GAAG,EAAE,4EAA4E;MACjFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEJ;IACR,CAAC;IAIDK,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4EAA4E,EAC5E;QACEC,MAAM,EAAE,MAAM;QACdL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEZ;QAAS,CAAC,CAAC;QACxCG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF;MAED,IAAI,CAACI,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,MAAMI,WAAW,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAEP,IAAI,EAAEZ;MAAS,CAAC;MAEvDL,KAAK,CAAC4B,SAAS,CAACF,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACApB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAEN,gBAAiB;MAAC,OAAO,EAAEH;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GArDIH,OAAO;EAAA,QAC6BD,QAAQ;AAAA;AAAA,KAD5CC,OAAO;AAuDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}